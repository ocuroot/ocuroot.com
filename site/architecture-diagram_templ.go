// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package site

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/ocuroot/ui/css"

// ArchitectureDiagram renders a custom HTML/CSS grid-based architecture diagram
func ArchitectureDiagram() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"architecture-diagram\"><div class=\"diagram-grid\"><div class=\"layer-wrapper storage-layer\"><!-- Top Row --><div class=\"component state-store\"><div class=\"component-icon\">üóÑÔ∏è</div><div class=\"component-label\">State Store</div></div><div class=\"spacer\"></div><div class=\"component cloud-resources\"><div class=\"component-icon\">‚òÅÔ∏è</div><div class=\"component-label\">Cloud Resources</div></div><!-- Vertical arrows -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = VerticalArrow().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"spacer\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = VerticalArrow().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Full-width invisible spacer to match CI Platform width --><div class=\"width-matcher\"></div></div><!-- Middle Row --><div class=\"layer-wrapper execution-environment bordered\"><div class=\"component ocuroot-client\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = OcurootIcon().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"component-label\">Ocuroot Client</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = HorizontalArrow().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div class=\"component tools\"><div class=\"component-icon\">üîß</div><div class=\"component-label\">Tools</div><div class=\"component-subtitle\">(Terraform, Helm, kubectl, etc.)</div></div><!-- CI Platform (spans 3 columns) --><div class=\"component ci-platform\"><div class=\"component-icon\">üèóÔ∏è</div><div class=\"component-label\">CI Platform</div><div class=\"component-subtitle\">(GitHub Actions, Jenkins, CircleCI, BuildKite, etc.)</div></div></div></div></div><style>\n\t\t\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func OcurootIcon() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"component-icon\"><svg width=\"32\" height=\"32\" viewBox=\"0 0 271 271\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M134.426 155.378L171.909 134.643L134.426 113.908V113.85L134.374 113.879L134.322 113.85V113.908L96.8394 134.643L134.322 155.378V155.436L134.374 155.407L134.426 155.436V155.378Z\" fill=\"#333\"></path> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 135.245L134.186 61.0138V60.8062L134.374 60.91L134.562 60.8062V61.0138L268.748 135.245L134.562 209.476V209.683L134.374 209.58L134.186 209.683V209.476L0 135.245ZM33.0305 134.494L133.483 79.7267V79.5735L133.623 79.6501L133.764 79.5735V79.7267L234.216 134.494L133.764 189.261V189.415L133.623 189.338L133.483 189.415V189.261L33.0305 134.494Z\" fill=\"#333\"></path> <path d=\"M0 135.313H30.361V202.781L0 182.916V135.313Z\" fill=\"#333\"></path> <path d=\"M268.751 135.313H238.39V202.781L268.751 182.916V135.313Z\" fill=\"#333\"></path> <rect x=\"120.32\" y=\"194.16\" width=\"30.361\" height=\"67.4689\" fill=\"#333\"></rect></svg></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// VerticalArrow renders a double-headed vertical arrow SVG
func VerticalArrow() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"arrow\"><svg width=\"80px\" height=\"80px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"Arrow / Arrow_Down_Up\"><path id=\"Vector\" d=\"M11 16L8 19M8 19L5 16M8 19V5M13 8L16 5M16 5L19 8M16 5V19\" stroke=\"var(--arrow-color, #333)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// HorizontalArrow renders a double-headed horizontal arrow SVG
func HorizontalArrow() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"arrow\"><svg width=\"80px\" height=\"80px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"Arrow / Arrow_Left_Right\"><path id=\"Vector\" d=\"M16 13L19 16M19 16L16 19M19 16H5M8 11L5 8M5 8L8 5M5 8H19\" stroke=\"var(--arrow-color, #333)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

const style = `
	.architecture-diagram {
			margin: 2rem 0;
			display: flex;
			justify-content: center;
			--arrow-color: var(--text-secondary);
		}
		
		.diagram-grid {
			display: grid;
			grid-template-columns: 1fr 80px 1fr;
			grid-template-rows: auto 60px auto 80px;
			gap: 20px;
			align-items: center;
			justify-items: center;
			max-width: 600px;
		}
		
		.layer-wrapper {
			grid-column: 1 / -1;
			width: 100%;
			display: grid;
			grid-template-columns: 1fr 80px 1fr;
			row-gap: 20px;
			column-gap: 20px;
			align-items: center;
			justify-items: center;
			border-radius: 16px;
			padding: 4px 20px;
			margin: 0 10px;
		}
		
		.storage-layer {
			grid-row: 1 / 3;
			grid-template-rows: auto 60px auto;
		}
		
		.execution-environment {
			grid-row: 3 / -1;
			grid-template-rows: auto auto;
		}
		
		.bordered {
			border: 2px dashed var(--border-color, #ccc);
			background: rgba(0, 0, 0, 0.02);
			padding-top: 16px;
			padding-bottom: 16px;
		}
		
		.width-matcher {
			grid-column: 1 / -1;
			height: 0;
			visibility: hidden;
		}
		
		.component {
			background: white;
			border: 2px solid #333;
			border-radius: 12px;
			padding: 16px 20px;
			text-align: center;
			width: 100%;
			height: 100%;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			box-shadow: 0 2px 8px rgba(0,0,0,0.1);
			transition: transform 0.2s ease;
		}
		
		.component:hover {
			transform: translateY(-2px);
			box-shadow: 0 4px 12px rgba(0,0,0,0.15);
		}
		
		.component-icon {
			font-size: 24px;
			margin-bottom: 8px;
		}
		
		.component-label {
			font-weight: 600;
			font-size: 14px;
			color: #333;
			margin-bottom: 4px;
		}
		
		.component-subtitle {
			font-size: 11px;
			color: #666;
			line-height: 1.3;
		}
		
		/* Component-specific colors */
		.state-store {
			background: #e8f5e8;
			border-color: #1b5e20;
		}
		
		.cloud-resources {
			background: #f1f8e9;
			border-color: #33691e;
		}
		
		.ocuroot-client {
			background: #f3e5f5;
			border-color: #4a148c;
		}
		
		.tools {
			background: #fff3e0;
			border-color: #e65100;
		}
		
		.ci-platform {
			background: #e1f5fe;
			border-color: #01579b;
			grid-column: 1 / -1;
			width: 100%;
			max-width: none;
		}
		
		/* Arrow styles */
		.arrow {
			display: flex;
			align-items: center;
			justify-content: center;
		}
		
		.arrow-svg {
			display: block;
		}
		
		.spacer {
			/* Empty grid cell for spacing */
		}
		
		/* Responsive design */
		@media (max-width: 768px) {
			.diagram-grid {
				grid-template-columns: 1fr 60px 1fr;
				gap: 15px;
				max-width: 400px;
			}
			
			.component {
				min-width: 100px;
				padding: 12px 16px;
			}
			
			.component-icon {
				font-size: 20px;
			}
			
			.component-label {
				font-size: 12px;
			}
			
			.component-subtitle {
				font-size: 10px;
			}
		}
	`

func init() {
	css.Default().Add([]byte(style))
}

var _ = templruntime.GeneratedTemplate
